version: "3.4"

volumes:
  mysql: ~

services:
  php:
    restart: "no"
    build:
      context: "./"
      dockerfile: "./docker/php/Dockerfile"
    volumes:
      - ".:/app"
    command: "php -S 0.0.0.0:80 -t public -c .docker/php/php.ini"
    ports:
      - "80:80"
    environment:
      DATABASE_URL: "mysql://root:rootpassword@mysql:3306/main"
      APP_ENV: "dev"
    depends_on:
      - redis
      - mysql
      - rabbitmq

  consumer_command:
    build:
      context: "./"
      dockerfile: "./docker/php/Dockerfile"
    volumes:
      - ".:/app"
    restart: always
    command: ['/app/bin/console', 'messenger:consume', 'command', '-vv']
    environment:
      DATABASE_URL: "mysql://user:password@mysql:3306/main"
    depends_on:
      - redis
      - mysql
      - rabbitmq

  consumer_event_stream:
    build:
      context: "./"
      dockerfile: "./docker/php/Dockerfile"
    volumes:
      - ".:/app"
    restart: always
    command: ['/app/bin/console', 'messenger:consume', 'event_stream', '-vv']
    environment:
      DATABASE_URL: "mysql://user:password@mysql:3306/main"
    depends_on:
      - redis
      - mysql
      - rabbitmq

  frontend:
    restart: "no"
    build:
      context: "./"
      dockerfile: "./docker/frontend/Dockerfile"
    command: "sh -c 'yarn install && yarn start'"
    volumes:
      - ./frontend:/app
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
      - REDIS_URL=tcp://redis:6379

  mysql:
    image: "mysql:5.7"
    expose:
      - "3306"
    ports:
      - "3306:3306"
    volumes:
      - "mysql:/var/lib/mysql"
    environment:
      MYSQL_ROOT_PASSWORD: "rootpassword"
      MYSQL_DATABASE: "main"
      MYSQL_USER: "user"
      MYSQL_PASSWORD: "password"
    healthcheck:
      test: "mysqladmin ping -h localhost -P 3306 -u $${MYSQL_USER} -p$${MYSQL_PASSWORD}"
      interval: 2s
      timeout: 5s
      retries: 15

  sockets:
    restart: "no"
    build:
      context: "./"
      dockerfile: "./docker/sockets/Dockerfile"
    command: "sh -c 'yarn install && node app.js'"
    volumes:
      - ./sockets:/app
    ports:
      - "5000:5000"
    environment:
      - REDIS__HOST=redis
      - REDIS__PORT=6379
    depends_on:
      - redis

  redis:
    restart: "no"
    image: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 2s
      timeout: 5s
      retries: 15

  rabbitmq:
    restart: "no"
    image: "rabbitmq:3.8.11-management"
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: "/opt/rabbitmq/sbin/rabbitmqctl status"
      interval: 2s
      timeout: 5s
      retries: 15
